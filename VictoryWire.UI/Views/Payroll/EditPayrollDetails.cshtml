@model List<VictoryWire.UI.ViewModels.EmployeePayrollViewModel>

@foreach (var item in Model)
{
   
    <div class="form-horizontal">
        <h4>EmployeePayrollViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => item.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.EmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.EmployeeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.StandardHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.StandardHours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.StandardHours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.OvertimeHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.OvertimeHours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.OvertimeHours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.Deductions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.Deductions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.Deductions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.GrossPay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.GrossPay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.GrossPay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => item.NetPay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => item.NetPay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => item.NetPay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
